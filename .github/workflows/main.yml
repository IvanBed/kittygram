name: Main workflow

on:
  push:
    branches:
      - main

jobs:
  
  tests:
     
    runs-on: ubuntu-latest

    steps:
    
    - name: Check out code
      uses: actions/checkout@v3
   
    - name: Set up Python
      uses: actions/setup-python@v4
     
      with:
        python-version: ["3.9", "3.9", "3.10"]
  
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip 
        pip install flake8==6.0.0 flake8-isort==6.0.0
   
    - name: Test with flake8
     
      run: python -m flake8 backend/
  
  
  build-push:
    needs: tests
  
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
       
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker 
       
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push backend to DockerHub
     
        uses: docker/build-push-action@v4
        with:
          
          context: ./backend/
          
          push: true
        
          tags: ${{ secrets.DOCKER_LOGIN }}/kittygram_backend:latest

      - name: Push frontend to DockerHub
        
        uses: docker/build-push-action@v4
        with:
         
          context: ./frontend/
         
          push: true
         
          tags: ${{ secrets.DOCKER_LOGIN }}/kittygram_frontend:latest

      - name: Push gateway to DockerHub
        
        uses: docker/build-push-action@v4
        with:
         
          context: ./nginx/
          
          push: true
         
          tags: ${{ secrets.DOCKER_LOGIN }}/kittygram_gateway:latest

  
  deploy:
    needs: build-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
         
        uses: actions/checkout@v3
      - name: Copy docker-compose
        uses: appleboy/scp-action@master
         
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SERVER_PASSPHRASE }}
          source: "docker-compose.yml"
          target: "./kittygram"
      - name: Deploy application
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          passphrase: ${{ secrets.SERVER_PASSPHRASE }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e

            echo "Переходим в папку проекта"
            cd ./kittygram

            echo "Запускакм файл docker-compose"
            sudo docker compose -f docker-compose.production.yml pull

            echo "Перезапускаем контенеры"
            sudo docker compose -f docker-compose.production.yml down
            sudo docker compose -f docker-compose.production.yml up -d
            
            echo "Выполняет миграции и сбор статики"
            sudo docker compose -f docker-compose.production.yml exec backend python manage.py migrate
            sudo docker compose -f docker-compose.production.yml exec backend python manage.py collectstatic
            sudo docker compose -f docker-compose.production.yml exec backend cp -r /app/collected_static/. /backend_static/static/
            sudo docker image prune -f
  
  # Тестирование на сервере
  server_tests:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
            python-version: 3.9 
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./backend/requirements.txt --prefer-binary
      - name: Run autotests
        run: |
          pytest